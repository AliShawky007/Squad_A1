
COTS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  000003d4  00000468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080009c  0080009c  000004a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001111  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000af7  00000000  00000000  00001739  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a1  00000000  00000000  00002230  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000613  00000000  00000000  00002c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000574  00000000  00000000  0000326f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000037e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 39       	cpi	r26, 0x9C	; 156
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e9       	ldi	r26, 0x9C	; 156
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 39       	cpi	r26, 0x9D	; 157
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b7 00 	call	0x16e	; 0x16e <main>
  8a:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Choose_Timer_Min>:
/******************************************************************************
* \Syntax          : void Choose_Timer_Min(void)
* \Description     : choose the timer minutes from 0 to 9 min
*******************************************************************************/
void Choose_Timer_Min(void){
	if(Stop_watch_val/10==max_min)Stop_watch_val-=Zero_min;
  92:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
  96:	96 ea       	ldi	r25, 0xA6	; 166
  98:	98 0f       	add	r25, r24
  9a:	9a 30       	cpi	r25, 0x0A	; 10
  9c:	18 f4       	brcc	.+6      	; 0xa4 <Choose_Timer_Min+0x12>
  9e:	84 56       	subi	r24, 0x64	; 100
  a0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
	SEVEN_SEG_DISPLAY(Stop_watch_val+=increment_min);
  a4:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
  a8:	86 5f       	subi	r24, 0xF6	; 246
  aa:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
  ae:	0e 94 07 01 	call	0x20e	; 0x20e <SEVEN_SEG_DISPLAY>
  b2:	08 95       	ret

000000b4 <Choose_Timer_10Secs>:
/******************************************************************************
* \Syntax          : void Choose_Timer_10Sec(void)
* \Description     : choose the timer 10seconds from 0 to 5  10secs
*******************************************************************************/
void Choose_Timer_10Secs(void){
	if(Stop_watch_val%10==max_10sec)Stop_watch_val-=Zero_10sec;
  b4:	90 91 9c 00 	lds	r25, 0x009C	; 0x80009c <__data_end>
  b8:	87 e6       	ldi	r24, 0x67	; 103
  ba:	98 02       	muls	r25, r24
  bc:	81 2d       	mov	r24, r1
  be:	11 24       	eor	r1, r1
  c0:	85 95       	asr	r24
  c2:	85 95       	asr	r24
  c4:	97 fd       	sbrc	r25, 7
  c6:	83 95       	inc	r24
  c8:	88 0f       	add	r24, r24
  ca:	28 2f       	mov	r18, r24
  cc:	22 0f       	add	r18, r18
  ce:	22 0f       	add	r18, r18
  d0:	82 0f       	add	r24, r18
  d2:	29 2f       	mov	r18, r25
  d4:	28 1b       	sub	r18, r24
  d6:	25 30       	cpi	r18, 0x05	; 5
  d8:	19 f4       	brne	.+6      	; 0xe0 <Choose_Timer_10Secs+0x2c>
  da:	96 50       	subi	r25, 0x06	; 6
  dc:	90 93 9c 00 	sts	0x009C, r25	; 0x80009c <__data_end>
	SEVEN_SEG_DISPLAY(Stop_watch_val+=increment_10sec);
  e0:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
  e4:	8f 5f       	subi	r24, 0xFF	; 255
  e6:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
  ea:	0e 94 07 01 	call	0x20e	; 0x20e <SEVEN_SEG_DISPLAY>
  ee:	08 95       	ret

000000f0 <Timer_On>:
}
/******************************************************************************
* \Syntax          : void Timer_On(void)
* \Description     : start the timer counter
*******************************************************************************/
void Timer_On(void){
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
		uint16 ten_seconds_counter=0;
  f4:	c0 e0       	ldi	r28, 0x00	; 0
  f6:	d0 e0       	ldi	r29, 0x00	; 0
	while(1){
		if (Stop_watch_val%10==PASSED_MINUTE)
  f8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
  fc:	97 e6       	ldi	r25, 0x67	; 103
  fe:	89 02       	muls	r24, r25
 100:	91 2d       	mov	r25, r1
 102:	11 24       	eor	r1, r1
 104:	95 95       	asr	r25
 106:	95 95       	asr	r25
 108:	87 fd       	sbrc	r24, 7
 10a:	93 95       	inc	r25
 10c:	99 0f       	add	r25, r25
 10e:	29 2f       	mov	r18, r25
 110:	22 0f       	add	r18, r18
 112:	22 0f       	add	r18, r18
 114:	92 0f       	add	r25, r18
 116:	89 13       	cpse	r24, r25
 118:	18 c0       	rjmp	.+48     	; 0x14a <Timer_On+0x5a>
		{
				Stop_watch_val-=decrement_min;
				Stop_watch_val+=Count_NEW_60_SEC;
 11a:	84 50       	subi	r24, 0x04	; 4
 11c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
			if(Stop_watch_val==Timer_Finished){
 120:	8c 3f       	cpi	r24, 0xFC	; 252
 122:	51 f7       	brne	.-44     	; 0xf8 <Timer_On+0x8>
				Stop_watch_val=0;
 124:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end>
				SEVEN_SEG_DISPLAY(Stop_watch_val);
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	0e 94 07 01 	call	0x20e	; 0x20e <SEVEN_SEG_DISPLAY>
				BUZZ_ON();
 12e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <BUZZ_ON>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 132:	2f ef       	ldi	r18, 0xFF	; 255
 134:	83 e2       	ldi	r24, 0x23	; 35
 136:	94 ef       	ldi	r25, 0xF4	; 244
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <Timer_On+0x48>
 140:	00 c0       	rjmp	.+0      	; 0x142 <Timer_On+0x52>
 142:	00 00       	nop
				_delay_ms(5000);
				BUZZ_OFF();
 144:	0e 94 02 01 	call	0x204	; 0x204 <BUZZ_OFF>
				Stop_watch_val-=decrement_10sec;
				ten_seconds_counter=0;
			}
		}
	}
}
 148:	0f c0       	rjmp	.+30     	; 0x168 <Timer_On+0x78>
				BUZZ_OFF();
				break;
			}
		}
		else {
			SEVEN_SEG_DISPLAY(Stop_watch_val);
 14a:	0e 94 07 01 	call	0x20e	; 0x20e <SEVEN_SEG_DISPLAY>
			ten_seconds_counter++;
 14e:	21 96       	adiw	r28, 0x01	; 1
			if(ten_seconds_counter==PASSED_TEN_SECONDS)
 150:	c8 38       	cpi	r28, 0x88	; 136
 152:	23 e1       	ldi	r18, 0x13	; 19
 154:	d2 07       	cpc	r29, r18
 156:	81 f6       	brne	.-96     	; 0xf8 <Timer_On+0x8>
			{
				Stop_watch_val-=decrement_10sec;
 158:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
 15c:	81 50       	subi	r24, 0x01	; 1
 15e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
				ten_seconds_counter=0;
 162:	c0 e0       	ldi	r28, 0x00	; 0
 164:	d0 e0       	ldi	r29, 0x00	; 0
 166:	c8 cf       	rjmp	.-112    	; 0xf8 <Timer_On+0x8>
			}
		}
	}
}
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	08 95       	ret

0000016e <main>:
#include "App.h"	
sint8 Stop_watch_val=0;

int main(void)
{
	PORT_Init();
 16e:	0e 94 a4 01 	call	0x348	; 0x348 <PORT_Init>
    while (1) 
    {
	if(BTN_GetValue(BUTTON_0)==BUTTON_PRESSED){
 172:	8a e1       	ldi	r24, 0x1A	; 26
 174:	0e 94 d6 00 	call	0x1ac	; 0x1ac <BTN_GetValue>
 178:	81 11       	cpse	r24, r1
 17a:	03 c0       	rjmp	.+6      	; 0x182 <main+0x14>
		Choose_Timer_Min();
 17c:	0e 94 49 00 	call	0x92	; 0x92 <Choose_Timer_Min>
 180:	f8 cf       	rjmp	.-16     	; 0x172 <main+0x4>
	}
	else if(BTN_GetValue(BUTTON_1)==BUTTON_PRESSED){
 182:	8b e1       	ldi	r24, 0x1B	; 27
 184:	0e 94 d6 00 	call	0x1ac	; 0x1ac <BTN_GetValue>
 188:	81 11       	cpse	r24, r1
 18a:	03 c0       	rjmp	.+6      	; 0x192 <main+0x24>
		Choose_Timer_10Secs();
 18c:	0e 94 5a 00 	call	0xb4	; 0xb4 <Choose_Timer_10Secs>
 190:	f0 cf       	rjmp	.-32     	; 0x172 <main+0x4>
	}
	else if (BTN_GetValue(BUTTON_2)==BUTTON_PRESSED){
 192:	8c e1       	ldi	r24, 0x1C	; 28
 194:	0e 94 d6 00 	call	0x1ac	; 0x1ac <BTN_GetValue>
 198:	81 11       	cpse	r24, r1
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <main+0x34>
		Timer_On();
 19c:	0e 94 78 00 	call	0xf0	; 0xf0 <Timer_On>
 1a0:	e8 cf       	rjmp	.-48     	; 0x172 <main+0x4>
	}
	else SEVEN_SEG_DISPLAY(Stop_watch_val);
 1a2:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
 1a6:	0e 94 07 01 	call	0x20e	; 0x20e <SEVEN_SEG_DISPLAY>
 1aa:	e3 cf       	rjmp	.-58     	; 0x172 <main+0x4>

000001ac <BTN_GetValue>:
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	00 d0       	rcall	.+0      	; 0x1b4 <BTN_GetValue+0x8>
 1b4:	cd b7       	in	r28, 0x3d	; 61
 1b6:	de b7       	in	r29, 0x3e	; 62
 1b8:	18 2f       	mov	r17, r24
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	89 83       	std	Y+1, r24	; 0x01
 1be:	1a 82       	std	Y+2, r1	; 0x02
 1c0:	be 01       	movw	r22, r28
 1c2:	6f 5f       	subi	r22, 0xFF	; 255
 1c4:	7f 4f       	sbci	r23, 0xFF	; 255
 1c6:	81 2f       	mov	r24, r17
 1c8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_ReadChannel>
 1cc:	06 c0       	rjmp	.+12     	; 0x1da <BTN_GetValue+0x2e>
 1ce:	be 01       	movw	r22, r28
 1d0:	6e 5f       	subi	r22, 0xFE	; 254
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	81 2f       	mov	r24, r17
 1d6:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <DIO_ReadChannel>
 1da:	8a 81       	ldd	r24, Y+2	; 0x02
 1dc:	88 23       	and	r24, r24
 1de:	b9 f3       	breq	.-18     	; 0x1ce <BTN_GetValue+0x22>
 1e0:	8f e3       	ldi	r24, 0x3F	; 63
 1e2:	9c e9       	ldi	r25, 0x9C	; 156
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <BTN_GetValue+0x38>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <BTN_GetValue+0x3e>
 1ea:	00 00       	nop
 1ec:	89 81       	ldd	r24, Y+1	; 0x01
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	1f 91       	pop	r17
 1f8:	08 95       	ret

000001fa <BUZZ_ON>:
 1fa:	61 e0       	ldi	r22, 0x01	; 1
 1fc:	85 e1       	ldi	r24, 0x15	; 21
 1fe:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 202:	08 95       	ret

00000204 <BUZZ_OFF>:
 204:	60 e0       	ldi	r22, 0x00	; 0
 206:	85 e1       	ldi	r24, 0x15	; 21
 208:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 20c:	08 95       	ret

0000020e <SEVEN_SEG_DISPLAY>:
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	d8 2f       	mov	r29, r24
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	87 e1       	ldi	r24, 0x17	; 23
 218:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 21c:	61 e0       	ldi	r22, 0x01	; 1
 21e:	86 e1       	ldi	r24, 0x16	; 22
 220:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 224:	ed ec       	ldi	r30, 0xCD	; 205
 226:	de 9f       	mul	r29, r30
 228:	e1 2d       	mov	r30, r1
 22a:	11 24       	eor	r1, r1
 22c:	ce 2f       	mov	r28, r30
 22e:	c6 95       	lsr	r28
 230:	c6 95       	lsr	r28
 232:	c6 95       	lsr	r28
 234:	9c 2f       	mov	r25, r28
 236:	99 0f       	add	r25, r25
 238:	89 2f       	mov	r24, r25
 23a:	88 0f       	add	r24, r24
 23c:	88 0f       	add	r24, r24
 23e:	89 0f       	add	r24, r25
 240:	d8 1b       	sub	r29, r24
 242:	ed 2f       	mov	r30, r29
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	e6 58       	subi	r30, 0x86	; 134
 248:	ff 4f       	sbci	r31, 0xFF	; 255
 24a:	60 81       	ld	r22, Z
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WritePort>
 252:	8f e9       	ldi	r24, 0x9F	; 159
 254:	9f e0       	ldi	r25, 0x0F	; 15
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <SEVEN_SEG_DISPLAY+0x48>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <SEVEN_SEG_DISPLAY+0x4e>
 25c:	00 00       	nop
 25e:	60 e0       	ldi	r22, 0x00	; 0
 260:	86 e1       	ldi	r24, 0x16	; 22
 262:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	87 e1       	ldi	r24, 0x17	; 23
 26a:	0e 94 48 01 	call	0x290	; 0x290 <DIO_WriteChannel>
 26e:	ec 2f       	mov	r30, r28
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	e6 58       	subi	r30, 0x86	; 134
 274:	ff 4f       	sbci	r31, 0xFF	; 255
 276:	60 81       	ld	r22, Z
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	0e 94 96 01 	call	0x32c	; 0x32c <DIO_WritePort>
 27e:	8f e9       	ldi	r24, 0x9F	; 159
 280:	9f e0       	ldi	r25, 0x0F	; 15
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <SEVEN_SEG_DISPLAY+0x74>
 286:	00 c0       	rjmp	.+0      	; 0x288 <SEVEN_SEG_DISPLAY+0x7a>
 288:	00 00       	nop
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	08 95       	ret

00000290 <DIO_WriteChannel>:
 290:	e8 2f       	mov	r30, r24
 292:	e6 95       	lsr	r30
 294:	e6 95       	lsr	r30
 296:	e6 95       	lsr	r30
 298:	87 70       	andi	r24, 0x07	; 7
 29a:	66 23       	and	r22, r22
 29c:	b9 f0       	breq	.+46     	; 0x2cc <DIO_WriteChannel+0x3c>
 29e:	61 30       	cpi	r22, 0x01	; 1
 2a0:	51 f5       	brne	.+84     	; 0x2f6 <DIO_WriteChannel+0x66>
 2a2:	f0 e0       	ldi	r31, 0x00	; 0
 2a4:	ee 0f       	add	r30, r30
 2a6:	ff 1f       	adc	r31, r31
 2a8:	e4 57       	subi	r30, 0x74	; 116
 2aa:	ff 4f       	sbci	r31, 0xFF	; 255
 2ac:	01 90       	ld	r0, Z+
 2ae:	f0 81       	ld	r31, Z
 2b0:	e0 2d       	mov	r30, r0
 2b2:	40 81       	ld	r20, Z
 2b4:	21 e0       	ldi	r18, 0x01	; 1
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	b9 01       	movw	r22, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <DIO_WriteChannel+0x30>
 2bc:	66 0f       	add	r22, r22
 2be:	77 1f       	adc	r23, r23
 2c0:	8a 95       	dec	r24
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <DIO_WriteChannel+0x2c>
 2c4:	cb 01       	movw	r24, r22
 2c6:	84 2b       	or	r24, r20
 2c8:	80 83       	st	Z, r24
 2ca:	08 95       	ret
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	ee 0f       	add	r30, r30
 2d0:	ff 1f       	adc	r31, r31
 2d2:	e4 57       	subi	r30, 0x74	; 116
 2d4:	ff 4f       	sbci	r31, 0xFF	; 255
 2d6:	01 90       	ld	r0, Z+
 2d8:	f0 81       	ld	r31, Z
 2da:	e0 2d       	mov	r30, r0
 2dc:	40 81       	ld	r20, Z
 2de:	21 e0       	ldi	r18, 0x01	; 1
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	b9 01       	movw	r22, r18
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <DIO_WriteChannel+0x5a>
 2e6:	66 0f       	add	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	8a 95       	dec	r24
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <DIO_WriteChannel+0x56>
 2ee:	cb 01       	movw	r24, r22
 2f0:	80 95       	com	r24
 2f2:	84 23       	and	r24, r20
 2f4:	80 83       	st	Z, r24
 2f6:	08 95       	ret

000002f8 <DIO_ReadChannel>:
 2f8:	e8 2f       	mov	r30, r24
 2fa:	e6 95       	lsr	r30
 2fc:	e6 95       	lsr	r30
 2fe:	e6 95       	lsr	r30
 300:	28 2f       	mov	r18, r24
 302:	27 70       	andi	r18, 0x07	; 7
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	ee 0f       	add	r30, r30
 308:	ff 1f       	adc	r31, r31
 30a:	ec 57       	subi	r30, 0x7C	; 124
 30c:	ff 4f       	sbci	r31, 0xFF	; 255
 30e:	01 90       	ld	r0, Z+
 310:	f0 81       	ld	r31, Z
 312:	e0 2d       	mov	r30, r0
 314:	90 81       	ld	r25, Z
 316:	89 2f       	mov	r24, r25
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_ReadChannel+0x28>
 31c:	95 95       	asr	r25
 31e:	87 95       	ror	r24
 320:	2a 95       	dec	r18
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_ReadChannel+0x24>
 324:	81 70       	andi	r24, 0x01	; 1
 326:	fb 01       	movw	r30, r22
 328:	80 83       	st	Z, r24
 32a:	08 95       	ret

0000032c <DIO_WritePort>:
 32c:	86 95       	lsr	r24
 32e:	86 95       	lsr	r24
 330:	86 95       	lsr	r24
 332:	e8 2f       	mov	r30, r24
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	ee 0f       	add	r30, r30
 338:	ff 1f       	adc	r31, r31
 33a:	e4 57       	subi	r30, 0x74	; 116
 33c:	ff 4f       	sbci	r31, 0xFF	; 255
 33e:	01 90       	ld	r0, Z+
 340:	f0 81       	ld	r31, Z
 342:	e0 2d       	mov	r30, r0
 344:	60 83       	st	Z, r22
 346:	08 95       	ret

00000348 <PORT_Init>:
 348:	20 e0       	ldi	r18, 0x00	; 0
 34a:	3e c0       	rjmp	.+124    	; 0x3c8 <PORT_Init+0x80>
 34c:	e2 2f       	mov	r30, r18
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	ee 0f       	add	r30, r30
 352:	ff 1f       	adc	r31, r31
 354:	e0 5a       	subi	r30, 0xA0	; 160
 356:	ff 4f       	sbci	r31, 0xFF	; 255
 358:	90 81       	ld	r25, Z
 35a:	89 2f       	mov	r24, r25
 35c:	86 95       	lsr	r24
 35e:	86 95       	lsr	r24
 360:	86 95       	lsr	r24
 362:	97 70       	andi	r25, 0x07	; 7
 364:	31 81       	ldd	r19, Z+1	; 0x01
 366:	33 23       	and	r19, r19
 368:	c1 f0       	breq	.+48     	; 0x39a <PORT_Init+0x52>
 36a:	31 30       	cpi	r19, 0x01	; 1
 36c:	61 f5       	brne	.+88     	; 0x3c6 <PORT_Init+0x7e>
 36e:	e8 2f       	mov	r30, r24
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	ee 0f       	add	r30, r30
 374:	ff 1f       	adc	r31, r31
 376:	ec 56       	subi	r30, 0x6C	; 108
 378:	ff 4f       	sbci	r31, 0xFF	; 255
 37a:	01 90       	ld	r0, Z+
 37c:	f0 81       	ld	r31, Z
 37e:	e0 2d       	mov	r30, r0
 380:	30 81       	ld	r19, Z
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	50 e0       	ldi	r21, 0x00	; 0
 386:	ba 01       	movw	r22, r20
 388:	02 c0       	rjmp	.+4      	; 0x38e <PORT_Init+0x46>
 38a:	66 0f       	add	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	9a 95       	dec	r25
 390:	e2 f7       	brpl	.-8      	; 0x38a <PORT_Init+0x42>
 392:	cb 01       	movw	r24, r22
 394:	83 2b       	or	r24, r19
 396:	80 83       	st	Z, r24
 398:	16 c0       	rjmp	.+44     	; 0x3c6 <PORT_Init+0x7e>
 39a:	e8 2f       	mov	r30, r24
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	ee 0f       	add	r30, r30
 3a0:	ff 1f       	adc	r31, r31
 3a2:	ec 56       	subi	r30, 0x6C	; 108
 3a4:	ff 4f       	sbci	r31, 0xFF	; 255
 3a6:	01 90       	ld	r0, Z+
 3a8:	f0 81       	ld	r31, Z
 3aa:	e0 2d       	mov	r30, r0
 3ac:	30 81       	ld	r19, Z
 3ae:	41 e0       	ldi	r20, 0x01	; 1
 3b0:	50 e0       	ldi	r21, 0x00	; 0
 3b2:	ba 01       	movw	r22, r20
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <PORT_Init+0x72>
 3b6:	66 0f       	add	r22, r22
 3b8:	77 1f       	adc	r23, r23
 3ba:	9a 95       	dec	r25
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <PORT_Init+0x6e>
 3be:	cb 01       	movw	r24, r22
 3c0:	80 95       	com	r24
 3c2:	83 23       	and	r24, r19
 3c4:	80 83       	st	Z, r24
 3c6:	2f 5f       	subi	r18, 0xFF	; 255
 3c8:	2d 30       	cpi	r18, 0x0D	; 13
 3ca:	08 f4       	brcc	.+2      	; 0x3ce <PORT_Init+0x86>
 3cc:	bf cf       	rjmp	.-130    	; 0x34c <PORT_Init+0x4>
 3ce:	08 95       	ret

000003d0 <_exit>:
 3d0:	f8 94       	cli

000003d2 <__stop_program>:
 3d2:	ff cf       	rjmp	.-2      	; 0x3d2 <__stop_program>
